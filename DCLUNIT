#!/usr/bin/env bash

# ----------------------------------------------------------------------------
# DCL-Lite Unit Test Worker
# Anthony J. Borla (ajborla@bigpond.com)
# ----------------------------------------------------------------------------

runtest() {
  # Parse arguments into identifiable components
  IFS=^ read name cmpop expcode expvalue cut <<< "$@"

  # Capture output and return code
  retvalue=$(testcut ${cut})
  retcode=$?

  # Determine test status, and act accordingly
  [ "${expvalue}" ${cmpop} "${retvalue}" -a ${expcode} -eq ${retcode} ] \
    && echo OK - "${name}" \
    || echo FAIL - "${name}"
}

testcut() {
  # Add extension to test file name
  local name=$1
  shift
  name+=.com
  # Cleanup temporary file, use it to capture stderr
  rm -f /tmp/dclerror
  dcll ${name} $* 2> /tmp/dclerror
  # Return code dependant on file contents
  [ -s /tmp/dclerror ] && return 1
  return 0
}

#
# Perform tests. Value of `status` set to 1 (error) if any test fails
#
runtests() {
  status=0
  while IFS= read -r testargs; do
    runtest "${testargs}" || status=1
  done < /dev/stdin

  return $status
}

